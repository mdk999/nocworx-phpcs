<?xml version="1.0"?>
<ruleset name="NocWorx">
    <description>NocWorx PHP Coding Standard</description>

    <rule ref="PSR12">
        <exclude name="Generic.Sniffs.Functions.OpeningFunctionBraceBsdAllmanSniff"/>
        <exclude name="PSR2.Classes.ClassDeclaration.CloseBraceAfterBody"/>
        <exclude name="PSR2.Classes.ClassDeclaration.ExtendsLine"/>
        <exclude name="PSR2.Classes.ClassDeclaration.ImplementsLine"/>
        <exclude name="PSR2.Classes.ClassDeclaration.InterfaceWrongIndent"/>
        <exclude name="PSR2.Classes.ClassDeclaration.OpenBraceNewLine"/>
        <exclude name="PSR2.Classes.ClassDeclaration.SpaceBeforeName"/>
        <exclude name="PSR2.Classes.PropertyDeclaration.Underscore"/>
        <exclude name="PSR2.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace"/>
        <exclude name="PSR2.ControlStructures.SwitchDeclaration.TerminatingComment"/>
        <exclude name="PSR2.Methods.FunctionCallSignature.CloseBracketLine"/>
        <exclude name="PSR2.Methods.FunctionCallSignature.ContentAfterOpenBracket"/>
        <exclude name="PSR2.Methods.FunctionCallSignature.Indent"/>
        <exclude name="PSR2.Methods.MethodDeclaration.Underscore"/>
        <exclude name="Squiz.ControlStructures.ForEachLoopDeclaration.SpaceAfterOpen"/>
        <exclude name="Squiz.ControlStructures.ForEachLoopDeclaration.SpaceBeforeClose"/>
        <exclude name="Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeAs"/>
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.BraceIndent"/>
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine"/>
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.ContentAfterBrace"/>
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.Indent"/>
        <exclude name="Squiz.WhiteSpace.ScopeClosingBrace.ContentBefore"/>
        <exclude name="Squiz.ControlStructures.ForLoopDeclaration"/>

        <!-- these two can be reincluded once we've gone full on namespaced. -->
        <exclude name="PSR1.Classes.ClassDeclaration.MissingNamespace"/>
        <exclude name="Squiz.Classes.ValidClassName.NotCamelCaps"/>

        <!-- We may remove this exclusion. A decision has not yet been made -->
        <exclude name="PSR2.Namespaces.UseDeclaration.MultipleDeclarations"/>

        <!-- Discuss implementing this one -->
        <exclude name="PSR2.Methods.FunctionCallSignature.MultipleArguments"/>

        <properties>
            <property name="equalsSpacing" value="1"/>
            <property name="ignoreBlankLines" value="true"/>
            <property name="ignoreComments" value="false"/>
            <!--<property name="indent" value="2" />-->
            <property name="tabIndent" value="false"/>
        </properties>
    </rule>

    <!-- Space before and after an operator -->
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>

    <!-- Enforce Short Array Syntax -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax">
    </rule>

    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="absoluteLineLimit" value="120"/>
            <property name="ignoreComments" value="false"/>
        </properties>
    </rule>

    <!-- Enforce 0 spaces around parentheses -->
    <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket">
    </rule>

    <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterCloseBracket">
    </rule>

    <!-- camelCase method names -->
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName">
        <properties>
            <property name="strict" value="false"/>
        </properties>
    </rule>

    <!-- Converted indentation to warning -->
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <type>warning</type>
    </rule>

    <!-- Converted PSR12 Sniffs to warnings -->
    <rule ref="PSR12.Classes.ClassInstantiation.MissingParentheses">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.ControlStructures.ControlStructureSpacing.CloseParenthesisIndent">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.ControlStructures.ControlStructureSpacing.CloseParenthesisLine">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.ControlStructures.ControlStructureSpacing.FirstExpressionLine">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.ControlStructures.ControlStructureSpacing.LineIndent">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.Files.FileHeader.SpacingInsideBlock">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.Functions.NullableTypeDeclaration.WhitespaceFound">
        <type>warning</type>
    </rule>
    <rule ref="PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeReturnType">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.Namespaces.CompoundNamespaceDepth.TooDeep">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.Operators.OperatorSpacing.NoSpaceAfter">
        <type>warning</type>
    </rule>
    <rule ref="PSR12.Operators.OperatorSpacing.NoSpaceBefore">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.Traits.UseDeclaration.BlankLineAfterLastUse">
        <type>warning</type>
    </rule>
    <rule ref="PSR12.Traits.UseDeclaration.MultipleImport">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.Traits.UseDeclaration.OpenBraceNewLine">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.Traits.UseDeclaration.SpaceAfterComma">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.Traits.UseDeclaration.UseAfterBrace">
        <type>warning</type>
    </rule>
    <rule ref="PSR2.ControlStructures.SwitchDeclaration.BreakIndent">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.Classes.OpeningBraceSpace.Found">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.Files.FileHeader.SpacingAfterBlock">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.Files.DeclareStatement.SpaceFoundBeforeDirectiveValue">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.Files.DeclareStatement.SpaceFoundAfterDirective">
        <type>warning</type>
    </rule>

    <rule ref="PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon">
        <type>warning</type>
    </rule>

</ruleset>
